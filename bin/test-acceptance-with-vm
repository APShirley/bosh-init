#!/usr/bin/env bash
set -ex

base=$( cd "$( dirname "$( dirname "$0" )")" && pwd )
acceptance_assets_dir=$base/acceptance/tmp

cpi_release_file=bosh-warden-cpi-14.tgz
stemcell_file=bosh-stemcell-348-warden-boshlite-ubuntu-trusty-go_agent.tgz

cleanup() {
  ( cd $base && vagrant destroy -f )

  if [ -f "$tmpfile" ]; then
    rm -rf $tmpfile
  fi

  if [ ! -z "$OLD_BOSH_LITE_PRIVATE_KEY" ]; then
    export BOSH_LITE_PRIVATE_KEY=$OLD_BOSH_LITE_PRIVATE_KEY
  fi
}
trap cleanup EXIT

export BOSH_MICRO_CPI_RELEASE=${BOSH_MICRO_CPI_RELEASE:-https://s3.amazonaws.com/bosh-jenkins-artifacts/bosh-warden-cpi-release/$cpi_release_file}
export BOSH_MICRO_STEMCELL=${BOSH_MICRO_STEMCELL:-https://s3.amazonaws.com/bosh-jenkins-artifacts/bosh-stemcell/warden/$stemcell_file}

echo "ENV"
echo `env`

# Vagrant needs ubuntu to own the private key if aws provider
if [ ! -z "$BOSH_LITE_PRIVATE_KEY" ]; then
  tmpfile=`mktemp -t bosh-micro-tests-XXXXXXXX`
  cat $BOSH_LITE_PRIVATE_KEY > $tmpfile
  export OLD_BOSH_LITE_PRIVATE_KEY=$BOSH_LITE_PRIVATE_KEY
  export BOSH_LITE_PRIVATE_KEY=$tmpfile
fi

cd $base
VAGRANT_LOG=debug vagrant up $@

export BOSH_MICRO_VM_USERNAME=`vagrant ssh-config | grep "User " | awk '{print $2}'`
export BOSH_MICRO_VM_IP=`vagrant ssh-config 2>/dev/null | grep HostName | awk '{print $2}'`
export BOSH_MICRO_PRIVATE_KEY=${BOSH_LITE_PRIVATE_KEY:-`vagrant ssh-config 2>/dev/null | grep IdentityFile | awk '{print $2}'`}

./bin/test-acceptance
